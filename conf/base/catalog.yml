# Here you can define all your data sets by using simple YAML syntax.
#
# Documentation for this file format can be found in "The Data Catalog"
# Link: https://kedro.readthedocs.io/en/stable/05_data/01_data_catalog.html
#
# We support interacting with a variety of data stores including local file systems, cloud, network and HDFS
#
# An example data set definition can look as follows:
#
#bikes:
#  type: pandas.CSVDataSet
#  filepath: "data/01_raw/bikes.csv"
#
#weather:
#  type: spark.SparkDataSet
#  filepath: s3a://your_bucket/data/01_raw/weather*
#  file_format: csv
#  credentials: dev_s3
#  load_args:
#    header: True
#    inferSchema: True
#  save_args:
#    sep: '|'
#    header: True
#
#scooters:
#  type: pandas.SQLTableDataSet
#  credentials: scooters_credentials
#  table_name: scooters
#  load_args:
#    index_col: ['name']
#    columns: ['name', 'gear']
#  save_args:
#    if_exists: 'replace'
#    # if_exists: 'fail'
#    # if_exists: 'append'
#
# The Data Catalog supports being able to reference the same file using two different DataSet implementations
# (transcoding), templating and a way to reuse arguments that are frequently repeated. See more here:
# https://kedro.readthedocs.io/en/stable/05_data/01_data_catalog.html
#
# This is a data set used by the "Hello World" example pipeline provided with the project
# template. Please feel free to remove it once you remove the example pipeline.

MULTI_ct_terc1:
  type: pandas.CSVDataSet
  filepath: data/01_raw/MULTI_ct_terc1.csv
  layer: raw
  load_args:
    sep: ';'
    encoding: "latin"
    
MULTI_sn_fam:
  type: pandas.CSVDataSet
  filepath: data/01_raw/MULTI_sn_fam.csv
  layer: raw
  load_args:
    sep: ';'
    encoding: "latin"

MULTI_sn_mart:
  type: pandas.CSVDataSet
  filepath: data/01_raw/MULTI_sn_mart.csv
  layer: raw
  load_args:
    sep: ';'
    encoding: "latin"

Sn_Doc2-dadosAdicionaisFio:
  type: pandas.CSVDataSet
  filepath: data/01_raw/Sn_Doc2-dadosAdicionaisFio.csv
  layer: raw
  load_args:
    sep: ';'
    encoding: "latin"

sn_doc2:
  type: pandas.CSVDataSet
  filepath: data/01_raw/sn_doc2.csv
  layer: raw
  load_args:
    sep: '\t'
    encoding: "latin"
    engine: "python"

orig120:
   type: pandas.CSVDataSet
   filepath: data/02_intermediate/orig120.csv
   layer: intermediate
   load_args:
    sep: ','
    encoding: "latin"
  
orig122:
   type: pandas.CSVDataSet
   filepath: data/02_intermediate/orig122.csv
   layer: intermediate
   load_args:
    sep: ','
    encoding: "latin"
  
orig124:
   type: pandas.CSVDataSet
   filepath: data/02_intermediate/orig124.csv
   layer: intermediate
   load_args:
    sep: ','
    encoding: "latin"

orig130:
   type: pandas.CSVDataSet
   filepath: data/02_intermediate/orig130.csv
   layer: intermediate
   load_args:
    sep: ','
    encoding: "latin"
  
orig132:
   type: pandas.CSVDataSet
   filepath: data/02_intermediate/orig132.csv
   layer: intermediate
   load_args:
    sep: ','
    encoding: "latin"
  
orig134:
   type: pandas.CSVDataSet
   filepath: data/02_intermediate/orig134.csv
   layer: intermediate
   load_args:
    sep: ','
    encoding: "latin"

intermediate_01:
   type: pandas.CSVDataSet
   filepath: data/02_intermediate/intermediate_01.csv
   layer: intermediate
   load_args:
    sep: ','
    encoding: "latin"

primary_01:
   type: pandas.CSVDataSet
   filepath: data/03_primary/primary_01.csv
   layer: primary
   load_args:
    sep: ','
    encoding: "latin"

feature_leadtime:
   type: pandas.CSVDataSet
   filepath: data/04_feature/feature_leadtime.csv
   layer: feature

feature_days:
   type: pandas.CSVDataSet
   filepath: data/04_feature/feature_days.csv
   layer: feature

synthetic_leadtime_CTGAN:
   type: pandas.CSVDataSet
   filepath: data/05_model_input/synthetic_days_ctgan.csv
   layer: model_input

synthetic_days_CTGAN:
   type: pandas.CSVDataSet
   filepath: data/05_model_input/synthetic_leadtime_ctgan.csv
   layer: model_input

synthetic_leadtime_GaussianCopula:
   type: pandas.CSVDataSet
   filepath: data/05_model_input/synthetic_days_gc.csv
   layer: model_input

synthetic_days_GaussianCopula:
   type: pandas.CSVDataSet
   filepath: data/05_model_input/synthetic_leadtime_gc.csv
   layer: model_input

